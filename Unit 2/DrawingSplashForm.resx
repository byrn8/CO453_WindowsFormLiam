<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="DrawingIcon.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>